<?xml version="1.0" encoding="UTF-8"?><esper-configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    xmlns="http://www.espertech.com/schema/esper"    xsi:noNamespaceSchemaLocation="esper-configuration-4-0.xsd">	<!-- Sample engine settings -->	<engine-settings>		<defaults>			<threading>				<!-- In multithreaded environments, this setting controls whether dispatches to listeners preserve the ordering in which the statement processes events -->				<listener-dispatch preserve-order="true" timeout-msec="1000" locking="spin"/>				<!-- In multithreaded environments, this setting controls whether insert-into streams preserve the order of events inserted into them by one or more statements, -->				<!-- allowing statements that consume other statement's events to behave deterministic -->				<insert-into-dispatch preserve-order="true" timeout-msec="100" locking="spin"/>				<!-- These settings define the resolution of the internal timer thread, and can disable the timer  to indicate that the application supplies the timer events -->				<internal-timer enabled="true" msec-resolution="100"/>				<!-- Configure inbound threading, false by default. The optional capacity attribute instructs a capacity-bound queue and sender-wait policy. Without capacity the queue is unbounded. -->				<threadpool-inbound enabled="false" num-threads="0" capacity="1000"/>				<!-- Configure outbound threading, false by default. -->				<threadpool-outbound enabled="false" num-threads="0"/>				<!-- Configure timer execution threading, false by default. -->				<threadpool-timerexec enabled="false" num-threads="0"/>				<!-- Configure route execution threading, false by default. -->				<threadpool-routeexec enabled="false" num-threads="0"/>			</threading>			<event-meta>			    <!-- Lets configure the engine to use case-insensitive resolution for event properties -->				<class-property-resolution style="distinct_case_insensitive"/>			</event-meta>			<view-resources>			    <!-- Lets configure the engine to reuse views, which is the default but can introduce additional locking. -->				<share-views enabled="true"/>			    <!-- This setting is false by default. When false, multiple expiry policies (EPL statements where a stream has multiple data windows) are allowed and result in an expiry policy that retains the intersection of the data windows. See retain-intersection and retain-union keywords.					   When setting this flag to true, and when multiple expiry policies are specified for a stream, the data windows act by forwarding the insert and remove stream and thus intersecion and union behavior is not available. 					   The setting is available for backward-compatilibility to 2.x versions or special cases where custom behavior is desired.				-->				<allow-multiple-expiry-policy enabled="false"/>			</view-resources>			<logging>			    <!-- By default the engine does not generate logging through Log4j of the event processing execution path. To get debug output, set this flag to true. --> 			    <!-- This setting translates into a static boolean flag and thus may apply to multiple engine instances within a given VM. -->				<execution-path enabled="false" />			    <!-- By default the engine generates timer debug level logging through Log4j (true by default). To remove all timer-related debug-level output, set this flag to false. --> 			    <!-- This setting translates into a static boolean flag and thus may apply to multiple engine instances within a given VM. -->				<timer-debug enabled="false" />			    <!-- By default the engine does not report JBDC query performance information or other relevant JDBC API information. By setting this flag JDBC query information is measured and logged at information level.-->				<jdbc enabled="false" />			    <!-- By default the engine does not report query plan information unless logging at debug level. By setting this flag query plan information is logged at information level..-->				<query-plan enabled="false"/>			</logging>			<stream-selection>			    <!-- By default the engine generates output for the insert stream only, and not for the remove stream. The "istream" is the default. --> 			    <!-- To obtain output for remove stream only, or for insert stream and remove stream, there are keywords "rstream" and "irstream" for use in the select clause. -->			    <!-- This setting controls the default behavior, if no keyword is specified in the select-clause by statements. -->				<stream-selector value="istream" />			</stream-selection>			<time-source>			    <!-- By default the time source is System.currentTimeMillis; This sample configures the nano-second time call System.nanoTime() as the time source, which Esper adjusts for wall clock time.  --> 				<time-source-type value="nano" />			</time-source>			<!-- By default metrics reporting is disabled. Enable by setting the below. -->			<metrics-reporting enabled="false" engine-interval="1000" statement-interval="1000" threading="true">				<stmtgroup name="MyStmtGroup" interval="1000" default-include="true" num-stmts="100" report-inactive="true">				    <!-- samples of include/exclude using RegEx and SQL-Like syntax -->					<include-like>%MyFraudAnalysisStatement%</include-like>					<exclude-like>%MyMetricsStatement%</exclude-like>					<include-regex>.*</include-regex>					<exclude-regex>.*test.*</exclude-regex>				</stmtgroup>			</metrics-reporting>			<!-- Set string-value sorts to use Collator by setting this flag to true. -->			<language sort-using-collator="false"/>					<!-- 				Set division between integer values to return integer instead of double by setting this flag to true (default is false). 				Set division by zero to return null and not Double.infinity (default is false). 				Turn on caching of UDF function results for constant parameters (default is on).				Set evaluation of sub-selects that react to the same event to evaluate first within the same statement (default is true, i.e. subselects evaluate first).				Set duck-typing off: by default method invocations are validated strongly typed. Set to true to enable duck-typing.			--> 			<expression integer-division="false" division-by-zero-is-null="false" udf-cache="true" self-subselect-preeval="true" extended-agg="true" ducktyping="false"/>			<!-- By default prioritized statement execution is disabled. Enable by setting the flag. -->			<execution prioritized="false"/>		</defaults>	</engine-settings></esper-configuration>